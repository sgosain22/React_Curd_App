[{"/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/index.js":"1","/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/App.js":"2","/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/component/students.js":"3"},{"size":199,"mtime":1638340365185,"results":"4","hashOfConfig":"5"},{"size":160,"mtime":1638340609947,"results":"6","hashOfConfig":"5"},{"size":5076,"mtime":1638364578587,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"952fci",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/index.js",[],"/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/App.js",[],"/home/rexweb/Desktop/SushilTask/reactPractice/curd-app/src/component/students.js",["15","16","17","18","19","20","21","22","23","24","25"],"import React, { useState } from \"react\";\nimport \"../component/student.css\"\n\nconst Student = () => {\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    stuName: \"\",\n    emailId: \"\",\n    cityName: \"\"\n  });\n\n  const [fullName, setFullName] = useState(\"\");\n  const [stuName, setStuName] = useState(\"\");\n  const [emailId, setEmailId] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n\n  const [items, setItems] = useState([]);\n\n  const [toggleUpdate, setToggelUpdate] = useState(true);\n\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const [nowShow, dontShow] = useState(true);\n\n\n  const AddItem = (e) => {\n    e.preventDefault();\n\n    if (!formData) {\n      alert(\"Please fill all the Details.\");\n      \n\n    } else if (formData && !toggleUpdate) {\n        \n      setItems(\n        items.map((elem) => {\n          if (elem.id == isEditItem) {\n            return { ...elem, name: formData };\n          }\n          return elem;\n        })\n      );\n      setToggelUpdate(true);\n\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      });\n\n      setIsEditItem(null);\n    } else {\n      const allFormData = {\n        id: new Date().getTime().toString(),\n        name: formData,\n      };\n      setItems([...items, allFormData]);\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      });\n    //   console.log(setFormData)\n            \n    }\n    dontShow(true);\n  };\n\n  // Hide Add Button\n\n  const hideAdd = () => {\n      if(!formData){\n        dontShow(true);\n      }else{\n        dontShow(false)\n      }\n  }\n\n  // Delete Items\n\n  const deleteItem = (index) => {\n    const updatedItems = items.filter((elem) => {\n      return index != elem.id;\n    });\n    setItems(updatedItems);\n  };\n\n  // Edit Items\n\n  const editItem = (id) => {\n    let newEditItem = items.find((elem) => {\n      return elem.id == id;\n    });\n    console.log(newEditItem);\n\n    setToggelUpdate(false);\n\n    setFormData(newEditItem.name);\n\n    setIsEditItem(id);\n  };\n\n\n\n  return (\n    <>\n      <div className=\"fullForm\">\n        <div className=\"main\">\n          <h1>--Student Form--</h1>\n        </div>\n\n        <div>\n          <form id=\"myForm\">\n            <label>Full Name:</label>\n            <input\n              id=\"fullName\"\n              type=\"text\"\n              name=\"fullName\"\n              value={formData.fullName}\n              onChange={(e) =>\n                setFormData({ ...formData, fullName: e.target.value })\n              }\n            />\n\n            <label>Student Code:</label>\n            <input\n              id=\"stuName\"\n              type=\"text\"\n              name=\"stuName\"\n              value={formData.stuName}\n              onChange={(e) =>\n                setFormData({ ...formData, stuName: e.target.value })\n              }\n            />\n\n            <label>Email ID:</label>\n            <input\n              id=\"emailId\"\n              type=\"text\"\n              name=\"emailId\"\n              value={formData.emailId}\n              onChange={(e) =>\n                setFormData({ ...formData, emailId: e.target.value })\n              }\n            />\n\n            <label>City:</label>\n            <input\n              id=\"cityName\"\n              type=\"text\"\n              name=\"cityName\"\n              value={formData.cityName}\n              onChange={(e) =>{\n                setFormData({ ...formData, cityName: e.target.value })\n                hideAdd()\n              }}\n            />\n\n            {toggleUpdate ? (\n              <button  disabled={nowShow} type=\"submit\" title=\"addItem\" onClick={AddItem}>\n                Add\n              </button>\n            ) : (\n              <button type=\"button\" title=\"updateItem\" onClick={AddItem}>\n                Update\n              </button>\n            )}\n          </form>\n        <div className=\"showItemsBox\">\n          <div className=\"showItems\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Full Name</th>\n                  <th>Student Code</th>\n                  <th>Email ID</th>\n                  <th>City</th>\n                </tr>\n              </thead>\n              <tbody>\n                {items.map((elem) => {\n                  return (\n                    <tr key={elem.id}>\n                      <td>{elem.name.fullName}</td>\n                      <td>{elem.name.stuName}</td>\n                      <td>{elem.name.emailId}</td>\n                      <td>{elem.name.cityName}</td>\n                      <td>\n                        <button onClick={() => editItem(elem.id)}>Edit</button>\n                      </td>\n                      <td>\n                        <button onClick={() => deleteItem(elem.id)}>\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Student;\n",{"ruleId":"26","severity":1,"message":"27","line":12,"column":10,"nodeType":"28","messageId":"29","endLine":12,"endColumn":18},{"ruleId":"26","severity":1,"message":"30","line":12,"column":20,"nodeType":"28","messageId":"29","endLine":12,"endColumn":31},{"ruleId":"26","severity":1,"message":"31","line":13,"column":10,"nodeType":"28","messageId":"29","endLine":13,"endColumn":17},{"ruleId":"26","severity":1,"message":"32","line":13,"column":19,"nodeType":"28","messageId":"29","endLine":13,"endColumn":29},{"ruleId":"26","severity":1,"message":"33","line":14,"column":10,"nodeType":"28","messageId":"29","endLine":14,"endColumn":17},{"ruleId":"26","severity":1,"message":"34","line":14,"column":19,"nodeType":"28","messageId":"29","endLine":14,"endColumn":29},{"ruleId":"26","severity":1,"message":"35","line":15,"column":10,"nodeType":"28","messageId":"29","endLine":15,"endColumn":18},{"ruleId":"26","severity":1,"message":"36","line":15,"column":20,"nodeType":"28","messageId":"29","endLine":15,"endColumn":31},{"ruleId":"37","severity":1,"message":"38","line":37,"column":23,"nodeType":"39","messageId":"40","endLine":37,"endColumn":25},{"ruleId":"37","severity":1,"message":"41","line":85,"column":20,"nodeType":"39","messageId":"40","endLine":85,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":94,"column":22,"nodeType":"39","messageId":"40","endLine":94,"endColumn":24},"no-unused-vars","'fullName' is assigned a value but never used.","Identifier","unusedVar","'setFullName' is assigned a value but never used.","'stuName' is assigned a value but never used.","'setStuName' is assigned a value but never used.","'emailId' is assigned a value but never used.","'setEmailId' is assigned a value but never used.","'cityName' is assigned a value but never used.","'setCityName' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]