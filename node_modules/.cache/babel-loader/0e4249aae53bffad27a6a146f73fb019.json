{"ast":null,"code":"var _jsxFileName = \"/home/rexweb/Desktop/Sushil Task/reactPractice/curd-app/src/component/students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../component/student.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Student = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    stuName: \"\",\n    emailId: \"\",\n    cityName: \"\"\n  });\n  const [fullName, setFullName] = useState(\"\");\n  const [stuName, setStuName] = useState(\"\");\n  const [emailId, setEmailId] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleUpdate, setToggelUpdate] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const [nowShow, dontShow] = useState();\n\n  const AddItem = e => {\n    e.preventDefault();\n\n    if (!formData) {\n      alert(\"Please fill all the Details.\");\n      setFormData;\n    } else if (formData && !toggleUpdate) {\n      setItems(items.map(elem => {\n        if (elem.id == isEditItem) {\n          return { ...elem,\n            name: formData\n          };\n        }\n\n        return elem;\n      }));\n      setToggelUpdate(true);\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      });\n      setIsEditItem(null);\n    } else {\n      const allFormData = {\n        id: new Date().getTime().toString(),\n        name: formData\n      };\n      setItems([...items, allFormData]);\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      }); //   console.log(setFormData)\n    }\n  }; // Delete Items\n\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(elem => {\n      return index != elem.id;\n    });\n    setItems(updatedItems);\n  }; // Edit Items\n\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id == id;\n    });\n    console.log(newEditItem);\n    setToggelUpdate(false);\n    setFormData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"--Student Form--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"myForm\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fullName\",\n            type: \"text\",\n            name: \"fullName\",\n            value: formData.fullName,\n            onChange: e => setFormData({ ...formData,\n              fullName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Student Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"stuName\",\n            type: \"text\",\n            name: \"stuName\",\n            value: formData.stuName,\n            onChange: e => setFormData({ ...formData,\n              stuName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailId\",\n            type: \"text\",\n            name: \"emailId\",\n            value: formData.emailId,\n            onChange: e => setFormData({ ...formData,\n              emailId: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cityName\",\n            type: \"text\",\n            name: \"cityName\",\n            value: formData.cityName,\n            onChange: e => setFormData({ ...formData,\n              cityName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), toggleUpdate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            title: \"addItem\",\n            onClick: AddItem,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"updateItem\",\n            onClick: AddItem,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItemsBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"showItems\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Full Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Student Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Email ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"City\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: items.map(elem => {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: elem.name.fullName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: elem.name.stuName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: elem.name.emailId\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: elem.name.cityName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 176,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => editItem(elem.id),\n                        children: \"Edit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 178,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => deleteItem(elem.id),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 181,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this)]\n                  }, elem.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Student, \"VipIv3wjSc9Ij139xS+0h7oxNIo=\");\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["/home/rexweb/Desktop/Sushil Task/reactPractice/curd-app/src/component/students.js"],"names":["React","useState","Student","formData","setFormData","fullName","stuName","emailId","cityName","setFullName","setStuName","setEmailId","setCityName","items","setItems","toggleUpdate","setToggelUpdate","isEditItem","setIsEditItem","nowShow","dontShow","AddItem","e","preventDefault","alert","map","elem","id","name","allFormData","Date","getTime","toString","deleteItem","index","updatedItems","filter","editItem","newEditItem","find","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../component/student.css\"\n\nconst Student = () => {\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    stuName: \"\",\n    emailId: \"\",\n    cityName: \"\"\n  });\n\n  const [fullName, setFullName] = useState(\"\");\n  const [stuName, setStuName] = useState(\"\");\n  const [emailId, setEmailId] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n\n  const [items, setItems] = useState([]);\n\n  const [toggleUpdate, setToggelUpdate] = useState(true);\n\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const [nowShow, dontShow] = useState()\n\n\n  const AddItem = (e) => {\n    e.preventDefault();\n\n    if (!formData) {\n      alert(\"Please fill all the Details.\");\n      setFormData \n\n    } else if (formData && !toggleUpdate) {\n      setItems(\n        items.map((elem) => {\n          if (elem.id == isEditItem) {\n            return { ...elem, name: formData };\n          }\n          return elem;\n        })\n      );\n      setToggelUpdate(true);\n\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      });\n\n      setIsEditItem(null);\n    } else {\n      const allFormData = {\n        id: new Date().getTime().toString(),\n        name: formData,\n      };\n      setItems([...items, allFormData]);\n      setFormData({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n      });\n    //   console.log(setFormData)\n            \n    }\n  };\n\n  // Delete Items\n\n  const deleteItem = (index) => {\n    const updatedItems = items.filter((elem) => {\n      return index != elem.id;\n    });\n    setItems(updatedItems);\n  };\n\n  // Edit Items\n\n  const editItem = (id) => {\n    let newEditItem = items.find((elem) => {\n      return elem.id == id;\n    });\n    console.log(newEditItem);\n\n    setToggelUpdate(false);\n\n    setFormData(newEditItem.name);\n\n    setIsEditItem(id);\n  };\n\n\n\n  return (\n    <>\n      <div className=\"fullForm\">\n        <div className=\"main\">\n          <h1>--Student Form--</h1>\n        </div>\n\n        <div>\n          <form id=\"myForm\">\n            <label>Full Name:</label>\n            <input\n              id=\"fullName\"\n              type=\"text\"\n              name=\"fullName\"\n              value={formData.fullName}\n              onChange={(e) =>\n                setFormData({ ...formData, fullName: e.target.value })\n              }\n            />\n\n            <label>Student Code:</label>\n            <input\n              id=\"stuName\"\n              type=\"text\"\n              name=\"stuName\"\n              value={formData.stuName}\n              onChange={(e) =>\n                setFormData({ ...formData, stuName: e.target.value })\n              }\n            />\n\n            <label>Email ID:</label>\n            <input\n              id=\"emailId\"\n              type=\"text\"\n              name=\"emailId\"\n              value={formData.emailId}\n              onChange={(e) =>\n                setFormData({ ...formData, emailId: e.target.value })\n              }\n            />\n\n            <label>City:</label>\n            <input\n              id=\"cityName\"\n              type=\"text\"\n              name=\"cityName\"\n              value={formData.cityName}\n              onChange={(e) =>\n                setFormData({ ...formData, cityName: e.target.value })\n              }\n            />\n\n            {toggleUpdate ? (\n              <button type=\"submit\" title=\"addItem\" onClick={AddItem}>\n                Add\n              </button>\n            ) : (\n              <button type=\"button\" title=\"updateItem\" onClick={AddItem}>\n                Update\n              </button>\n            )}\n          </form>\n        <div className=\"showItemsBox\">\n          <div className=\"showItems\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Full Name</th>\n                  <th>Student Code</th>\n                  <th>Email ID</th>\n                  <th>City</th>\n                </tr>\n              </thead>\n              <tbody>\n                {items.map((elem) => {\n                  return (\n                    <tr key={elem.id}>\n                      <td>{elem.name.fullName}</td>\n                      <td>{elem.name.stuName}</td>\n                      <td>{elem.name.emailId}</td>\n                      <td>{elem.name.cityName}</td>\n                      <td>\n                        <button onClick={() => editItem(elem.id)}>Edit</button>\n                      </td>\n                      <td>\n                        <button onClick={() => deleteItem(elem.id)}>\n                          Delete\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Student;\n"]},"metadata":{},"sourceType":"module"}