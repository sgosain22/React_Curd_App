{"ast":null,"code":"var _jsxFileName = \"/home/rexweb/Desktop/Sushil Task/reactPractice/curd-app/src/component/students.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Student = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    stuName: \"\",\n    emailId: \"\",\n    cityName: \"\"\n  });\n  const [fullName, setFullName] = useState(\"\");\n  const [stuName, setStuName] = useState(\"\");\n  const [emailId, setEmailId] = useState(\"\");\n  const [cityName, setCityName] = useState(\"\");\n  const [items, setItems] = useState([]);\n  const [toggleUpdate, setToggelUpdate] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n\n  const AddItem = e => {\n    e.preventDefault();\n\n    if (!formData) {\n      alert('Please fill all the Details.');\n    } else if (formData && !toggleUpdate) {\n      setItems.map(elem => {\n        if (elem.id == isEditItem) return { ...elem\n        };\n      });\n    } else {\n      const allFormData = {\n        id: new Date().getTime().toString(),\n        name: formData\n      };\n      setItems([...items, allFormData]); // setFormData(\"\");\n    }\n  }; // Delete Items\n\n\n  const deleteItem = index => {\n    const updatedItems = items.filter(elem => {\n      return index != elem.id;\n    });\n    setItems(updatedItems);\n  }; // Edit Items\n\n\n  const editItem = id => {\n    let newEditItem = items.find(elem => {\n      return elem.id == id;\n    });\n    console.log(newEditItem);\n    setToggelUpdate(false);\n    setFormData(newEditItem.name);\n    setIsEditItem(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Full Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fullName\",\n            type: \"text\",\n            name: \"fullName\",\n            value: formData.fullName,\n            onChange: e => setFormData({ ...formData,\n              fullName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Student Code:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"stuName\",\n            type: \"text\",\n            name: \"stuName\",\n            value: formData.stuName,\n            onChange: e => setFormData({ ...formData,\n              stuName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"emailId\",\n            type: \"text\",\n            name: \"emailId\",\n            value: formData.emailId,\n            onChange: e => setFormData({ ...formData,\n              emailId: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cityName\",\n            type: \"text\",\n            name: \"cityName\",\n            value: formData.cityName,\n            onChange: e => setFormData({ ...formData,\n              cityName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), toggleUpdate ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            title: \"addItem\",\n            onClick: AddItem,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            title: \"updateItem\",\n            onClick: AddItem,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showItems\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Student Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Email ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"City\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: items.map(elem => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: elem.name.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: elem.name.stuName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: elem.name.emailId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: elem.name.cityName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => editItem(elem.id),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => deleteItem(elem.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 29\n                  }, this)]\n                }, elem.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Student, \"1SdNRDT5prEBTzC8dcSmzOBXWeU=\");\n\n_c = Student;\nexport default Student;\n\nvar _c;\n\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"sources":["/home/rexweb/Desktop/Sushil Task/reactPractice/curd-app/src/component/students.js"],"names":["React","useState","Student","formData","setFormData","fullName","stuName","emailId","cityName","setFullName","setStuName","setEmailId","setCityName","items","setItems","toggleUpdate","setToggelUpdate","isEditItem","setIsEditItem","AddItem","e","preventDefault","alert","map","elem","id","allFormData","Date","getTime","toString","name","deleteItem","index","updatedItems","filter","editItem","newEditItem","find","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nconst Student = () => {\n\n    const[formData, setFormData] = useState({\n        fullName: \"\",\n        stuName: \"\",\n        emailId: \"\",\n        cityName: \"\"\n    });\n\n    const [fullName, setFullName] = useState(\"\");\n    const [stuName, setStuName] = useState(\"\");\n    const [emailId, setEmailId] = useState(\"\");\n    const [cityName, setCityName] = useState(\"\");\n\n    const [items, setItems] = useState([]);\n\n    const [toggleUpdate, setToggelUpdate] = useState(true);\n\n    const [isEditItem, setIsEditItem] = useState(null);\n\n    const AddItem = (e) => {\n        e.preventDefault();\n\n        if(!formData){\n            alert('Please fill all the Details.')\n        }else if(formData && !toggleUpdate){\n            setItems.map((elem) => {\n                    if(elem.id == isEditItem)\n                    return {...elem, }\n            })\n        } else{\n            const allFormData = {id: new Date().getTime().toString(), name: formData }\n            setItems([...items, allFormData]);\n            // setFormData(\"\");\n        }\n            \n       \n    }\n\n    // Delete Items\n\n    const deleteItem = (index) => {\n\n        const updatedItems = items.filter((elem) => {\n                return index != elem.id;\n        })\n        setItems(updatedItems);\n\n    }\n\n    // Edit Items\n\n    const editItem = (id) => {\n        let newEditItem = items.find((elem) => {\n            return elem.id == id\n        })\n        console.log(newEditItem);\n\n        setToggelUpdate(false);\n\n        setFormData(newEditItem.name);\n\n        setIsEditItem(id);\n    }\n\n\n\n\n    return(\n        <>\n            <div>\n      <div className=\"main\">\n        <h1>Form</h1>\n      </div>\n\n      <div>\n        <form>\n          <label>Full Name:</label>\n          <input id=\"fullName\" type=\"text\" name=\"fullName\" \n            value = {formData.fullName}\n            onChange = {(e) => setFormData({...formData, fullName: e.target.value})}\n\n          />\n          \n          <label>Student Code:</label>\n          <input id=\"stuName\" type=\"text\" name=\"stuName\" \n             value = {formData.stuName}\n             onChange = {(e) => setFormData({...formData, stuName: e.target.value})}\n          />\n\n          <label>Email ID:</label>\n          <input id=\"emailId\" type=\"text\" name=\"emailId\" \n            value = {formData.emailId}\n            onChange = {(e) => setFormData({...formData, emailId: e.target.value})}\n          />\n\n          <label>City:</label>\n          <input  id=\"cityName\" type=\"text\" name=\"cityName\"\n            value = {formData.cityName}\n            onChange = {(e) => setFormData({...formData, cityName: e.target.value})}\n           />\n\n           {\n               toggleUpdate ?  \n               <button type=\"submit\" title=\"addItem\" onClick={AddItem}>Add</button> :\n               <button type=\"submit\" title=\"updateItem\" onClick={AddItem}>Update</button>\n           }\n\n         \n\n\n        </form>\n\n        <div className=\"showItems\">\n            <table>\n                <thead>\n                    <tr>\n                      <th>Full Name</th>\n                      <th>Student Code</th>\n                      <th>Email ID</th>\n                      <th>City</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                items.map((elem ) => {\n                    return(\n                        <tr key={elem.id}>\n                            <td>{elem.name.fullName}</td>\n                            <td>{elem.name.stuName}</td>\n                            <td>{elem.name.emailId}</td>\n                            <td>{elem.name.cityName}</td>\n                            <td><button onClick={() => editItem(elem.id)}>Edit</button></td>\n                            <td><button onClick={() => deleteItem(elem.id)}>Delete</button></td>\n                        </tr>\n                        \n                    )\n                }) \n\n            }\n                </tbody>\n            </table>\n\n        </div>\n        \n\n      </div>\n    </div>\n        </>\n    )\n}\n\nexport default Student"]},"metadata":{},"sourceType":"module"}